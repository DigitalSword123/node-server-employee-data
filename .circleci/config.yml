version: 2
orbs:
  browser-tools: circleci/browser-tools@1.1.0
jobs:
  build:
    docker:
      - image: cimg/node:15.0.1-browsers
      environment:
          TARGET_ENV_DEV        : dev
          TARGET_ENV_QA         : qa
          TARGET_ENV_UAT        : uat
          TARGET_ENV_PROD       : prod
          TARGET_AWS_REGION : my-value-2
    working_directory: ~/node-server-employee-data
    steps:
     - browser-tools/install-browser-tools
     - checkout
     - setup_remote_docker
     - run: echo "build docker image with required instllation of node and git"
     - run: echo "Node versiopn in docker is"
     - run: node --version
     - run: npm install --save-dev
    
  npm_build_and_test: &npm_build_and_test # this can be any name you choose
    executor: node/default # use the default executor defined within the orb
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          command: npm run test
          name: Run tests
      - run:
          command: npm run build
          name: Build app
      - persist_to_workspace:
          root: ~/project
          paths:
            - .

  deploy: &deploy-env
    docker:
      - image: circleci/node:14
    
    working_directory: ~/node-server-employee-data/terraform

    steps:
      - checkout 
      - setup_remote_docker

      # - run: echo "deploy"
      # - run: bash ./scripts/install_terraform.sh
      # - run: bash ./scripts/apply_${tag}.sh
      # - run: echo "deployed successfully"

      - run: echo "deploy"
      - run: echo ${tag}
      - run: bash ./scripts/install_terraform.sh
      - run: bash ./scripts/apply_${tag}.sh
      # - run: bash terraform -v
      # - run: bash terraform init
      # - run: bash ./scripts/terraform_plan.sh
      # - run: bash ./scripts/terraform_apply.sh
      - run: echo `deployed successfully in ${tag} environment`

  deploy_dev:
    <<: *deploy-env
    environment:
      tag: dev

  deploy_qa:
    <<: *deploy-env
    environment:
      tag: qa
  
  deploy_uat:
    <<: *deploy-env
    environment:
      tag: uat

  deploy_prod:
    <<: *deploy-env
    environment:
      tag: prod
  
  npm_build_test:
    <<: *npm_build_and_test
    environment:
      tag: dev

workflows:
  version: 2

  stage_workflow:
    jobs:
      - build:
          filters:
            branches:
              only: main
      - npm_build_test:
         filters:
            branches:
              only: main
          requires:
            - build
      - deploy_dev:
          filters:
            branches:
              only: main
          requires:
            - build 
      - deploy_qa:
          filters:
            branches:
              only: main
          requires:
            - build 
      - deploy_uat:
          filters:
            branches:
              only: main
          requires:
            - build 
      - deploy_prod:
          filters:
            branches:
              only: main
          requires:
            - build 
            