version: '2.1'
orbs:
  node: circleci/node@5.0.2
  aws-cli: circleci/aws-cli@2.0
jobs:
# https://medium.com/geekculture/configure-aws-credentials-in-circle-ci-8353d765aa15
  aws-cli-cred-setup:
    executor: aws-cli/default
    steps:
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY
          aws-secret-access-key: AWS_SECRET_KEY
  
  # build:
  #   docker:
  #     - image: circleci/node:latest
  #   working_directory: ~/node-server-employee-data
    
  #   steps:
  #    - checkout
  #    - setup_remote_docker
  #    - run: echo "build docker image with required instllation of node and git"
  #    - run: echo "Node versiopn in docker is"
  #    - run: node --version
  #    - run: npm install --save-dev
    
  npm_build: &npm_build
    docker:
      - image: circleci/node:latest
    working_directory: ~/node-server-employee-data
    steps:
      - checkout
      - run: bash ./terraform_project/scripts/npm_build_branches.sh
  npm_test: &npm_test
    docker:
      - image: circleci/node:latest # use the default executor defined within the orb
    steps:
      - checkout
      - variables:
          POSTGRESS_USER:
          POSTGRESS_DB:  
          PGPASSWORD: 
          Artifactory_URL: 
      - run: bash ./terraform_project/scripts/npm-test.sh

  deploy: &deploy-env
    docker:
      - image: circleci/node:latest
    
    working_directory: ~/node-server-employee-data/terraform_project

    steps:
      - checkout 
      - setup_remote_docker

      # - run: echo "deploy"
      # - run: bash ./scripts/install_terraform.sh
      # - run: bash ./scripts/apply_${tag}.sh
      # - run: echo "deployed successfully"

      - run: echo "deploy"
      - run: echo $(pwd)
      - run: echo ${tag}
      - run: echo $PATH
      - run: echo $TARGET_ENV_DEV
      # - run: sudo chmod 777 install_terraform.sh
      # - run: bash install_terraform.sh
      - run : 
          name: terraform installation
          command: |
            sudo apt-get install wget unzip -y
            sudo apt-get install file
            wget https://releases.hashicorp.com/terraform/1.2.2/terraform_1.2.2_linux_amd64.zip
            unzip terraform_1.2.2_linux_amd64.zip
            ls -a
            chmod +x terraform
            file terraform
            uname -a
            sudo mv terraform /usr/local/bin
            terraform -v
      - run: ls -al
      - run: bash ./terraform_project/scripts/apply_${tag}.sh
      - run: echo `deployed successfully in ${tag} environment`

  deploy_dev:
    <<: *deploy-env
    environment:
      tag: dev

  deploy_qa:
    <<: *deploy-env
    environment:
      tag: qa
  
  deploy_uat:
    <<: *deploy-env
    environment:
      tag: uat

  deploy_prod:
    <<: *deploy-env
    environment:
      tag: prod
  
  npm_test:
    <<: *npm_test
    environment:
      tag: dev
      

workflows:
  version: 2
  # this aws-cli workflow for terraform work
  aws-cli:
    jobs:
      - aws-cli-cred-setup:
          context: aws
      - deploy_dev:
          filters:
            branches:
              only: main
          requires:
            - aws-cli-cred-setup
      - trigger_qa:
          type: approval
      - deploy_qa:
          filters:
            branches:
              only: main
          requires:
            - trigger_qa
            - aws-cli-cred-setup
            - deploy_dev
      - trigger_uat:
          type: approval
      - deploy_uat:
          filters:
            branches:
              only: main
          requires:
            - trigger_uat
            - aws-cli-cred-setup
            - deploy_qa
      - trigger_prod:
          type: approval
      - deploy_prod:
          filters:
            branches:
              only: main
          requires:
            - trigger_prod
            - aws-cli-cred-setup
            - deploy_uat
    # this stage_workflow for node js code
  stage_workflow:
    jobs:
      - build:
          filters:
            branches:
              only: main
      - npm_test:
          filters:
            branches:
              only: main
          requires:
            - build