name: node server employee data CI/CD pipeline

on:
  push:
    branches: 
      - feature/dev-2
      # - /^feature/.*$/
      # - /^hotfix/.*$/
      # - /^bugfix/.*$/
  # pull_request:
  #   branches: /^feature/.*$/

jobs:
  init-before:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Run a one-line script
        working-directory: ~/
        # if: github.ref.name == 'feature/dev-2'
        run: |
          echo "staring init-before stage"
          echo $(pwd)
          mkdir .aws
          mkdir .jfrog
          mkdir .m2
          echo "**************printing files in home directory***************"
          ls -al
          pip install --upgrade pip
          pip install semver # https://python-semver.readthedocs.io/en/2.9.0/index.html
          if [ "$DEBUG" = true ] ; then
            ls -alrt ~/.aws && ls -alrt ~ && ls -alrtr ~/.jfrog/ && ls -alrt ~/.m2
          fi
      - run: echo "One last message"
  # init:
  #   needs: init-before
  # build:
  #   needs: init
  # test: 
  #   needs: build

  # deploy_dev:
  #   needs: build
  #   name: deploy_dev stage
  #   runs-on: ubuntu-latest
  #   steps:

  #   - name: Checkout Repo
  #     uses: actions/checkout@v1

  #   - name: Terraform Init
  #     uses: hashicorp/terraform-github-actions/init@v0.4.0

  #     env:
  #       # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       TF_ACTION_WORKING_DIR: '../../terraform_project'
  #       AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY }}
  #       AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_KEY }}

  #   - name: Terraform Validate
  #     uses: hashicorp/terraform-github-actions/validate@v0.3.7

  #   - name: Terraform Apply
  #     uses: hashicorp/terraform-github-actions/apply@v0.4.0

  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       TF_ACTION_WORKING_DIR: '../../terraform_project'
  #       AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY }}

  # deploy_qa:
  #   needs: dev
  # deploy_uat:
  #   needs: deploy_qa
  # deploy_prod:
  #   needs: deploy_uat