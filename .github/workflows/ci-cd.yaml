name: node server employee data CI/CD pipeline

on:
  push:
    branches: 
      - 'feature/**'
      # - /^hotfix/.*$/
      # - /^bugfix/.*$/
  # pull_request:
  #   branches: /^feature/.*$/

jobs:
  init-before:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Run init-before script
        working-directory: /
        if: github.ref_name != 'main'
        run: |
          echo "starting init-before stage"
          echo $(pwd)
          echo "--------printing current branch name-------------"
          echo $GITHUB_REF_NAME
          sudo mkdir .aws
          sudo mkdir .jfrog
          sudo mkdir .m2
          echo "**************printing files in home directory***************"
          ls -al
          sudo pip install --upgrade pip
          sudo pip install semver # https://python-semver.readthedocs.io/en/2.9.0/index.html
          if [ "$DEBUG" = true ] ; then
            ls -alrt /.aws && ls -alrt ~ && ls -alrtr /.jfrog/ && ls -alrt /.m2
          fi
      - name: Upload config files as artifact
        uses: actions/upload-artifact@v1
        with:
          name: config_files
          path: |
            .aws
            .jfrog
            .m2
  
  init:
    needs: init-before
    runs-on: ubuntu-latest
    outputs:
      VARIABLE_FILE: ${{ steps.init-output-variable-file.outputs.output_file }}
    steps:
      - uses: actions/checkout@v3

      - name: Download artifact config_files from init stage
        uses: actions/download-artifact@v1
        with:
          name: config_files

      - name: Run init stage
        working-directory: .
        run: |
          bash ./github-actions-script/init-script.sh
        env:
          VARIABLE_FILE: build.env

      - name: Upload file build.env as an artifact
        uses: actions/upload-artifact@v1
        with:
          name: variable_file_init
          path: build.env

  build:
    needs: init 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download artifact variable_file_init from init stage
        uses: actions/download-artifact@v1
        with:
          name: variable_file_init

      - name: Run build stage 
        working-directory: .
        run: |
          bash ./github-actions-script/npm_build.sh
        env:
          VARIABLE_FILE: build.env

  # test: 
  #   needs: build

  # deploy_dev:
  #   needs: build
  #   name: deploy_dev stage
  #   runs-on: ubuntu-latest
  #   steps:

  #   - name: Checkout Repo
  #     uses: actions/checkout@v1

  #   - name: Terraform Init
  #     uses: hashicorp/terraform-github-actions/init@v0.4.0

  #     env:
  #       # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       TF_ACTION_WORKING_DIR: '../../terraform_project'
  #       AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY }}
  #       AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_KEY }}

  #   - name: Terraform Validate
  #     uses: hashicorp/terraform-github-actions/validate@v0.3.7

  #   - name: Terraform Apply
  #     uses: hashicorp/terraform-github-actions/apply@v0.4.0

  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       TF_ACTION_WORKING_DIR: '../../terraform_project'
  #       AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY }}

  # deploy_qa:
  #   needs: dev
  # deploy_uat:
  #   needs: deploy_qa
  # deploy_prod:
  #   needs: deploy_uat